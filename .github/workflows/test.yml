name: Test

on: [push]

jobs:

  test:
    runs-on: ubuntu-18.04
    if: github.ref != 'refs/heads/master'

    services:

     mysql:
      image: mysql:5.7
      ports:
        - 3307:3306
      env:
        MYSQL_DATABASE: db
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        MYSQL_ROOT_PASSWORD: password

     es:
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.6.1
      ports:
      - 9200:9200
      options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

     redis:
      image: bitnami/redis:latest
      ports:
        - 6379:6379
      env:
        REDIS_PASSWORD: na8!^&*JbXEz

    env:
      VARIABLES_PASSPHRASE: ${{ secrets.variables_testing_passphrase }}
      COMPOSER_PASSPHRASE: ${{ secrets.composer_passphrase }}
      SLACK_HOOK_URL: ${{ secrets.slack_webhook_url }}

    steps:
    - uses: actions/checkout@v2

    - name: Slack test start notification
      run: |
           curl -X POST --data-urlencode 'payload={"channel": "#cicd", "text": "Test workflow has started."}' $SLACK_HOOK_URL

    - name: Add elasticsearch host
      run: |
        echo "127.0.0.1 es" | sudo tee -a /etc/hosts
        echo "127.0.0.1 redis" | sudo tee -a /etc/hosts
        echo "127.0.0.1 db" | sudo tee -a /etc/hosts

    - name: Cache node modules
      uses: actions/cache@v1
      with:
       path: ~/.npm
       key: npm-${{ hashFiles('**/package-lock.json') }}

    - name: Cache PHP dependencies
      uses: actions/cache@v1
      with:
       path: ~/.composer
       key: composer-${{ hashFiles('**/composer.lock') }}

    - name: Decrypt composer auth.json .env.testing
      run: |
          gpg --quiet --batch --yes --decrypt --passphrase=$COMPOSER_PASSPHRASE --output auth.json .github/secrets/auth.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase=$VARIABLES_PASSPHRASE --output .env.testing .github/secrets/.env.testing.gpg

    - name: Install curl zip
      run: sudo apt-get update && sudo apt-get install -y curl zip

    - name: Install composer
      run: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

    - name: Instruct composer to use https protocol over ssh
      run: composer config github-protocols https

    - name: Validate composer and install dependecies
      run: composer validate && composer install -q --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

    - uses: actions/setup-node@v2
      with:
        node-version: '15'
    - run: npm i -g webpack-cli
    - run: npm install
    - run: npm run prod

    - name: Migrate
      run: php artisan --env=testing migrate --force

    - name: Seed
      run: php artisan --env=testing db:seed --force

    - name: Cache routes
      run: |
        php artisan route:cache --env=testing

    - name: PHPUnit
      run: vendor/bin/phpunit

    - name: Slack deploy finish notification
      run: |
           curl -X POST --data-urlencode 'payload={"channel": "#cicd", "text": "All tests have passed."}' $SLACK_HOOK_URL
