name: Test

on: [push]

jobs:

  test:
    runs-on: ubuntu-18.04
    if: github.ref != 'refs/heads/master'
    services:

     mysql:
      image: mysql:5.7
      ports:
        - 3307:3306
      env:
        MYSQL_DATABASE: db
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        MYSQL_ROOT_PASSWORD: password

     redis:
      image: bitnami/redis:latest
      ports:
        - 6379:6379
      env:
        REDIS_PASSWORD: password

    env:
      COMPOSER_PASSPHRASE: ${{ secrets.composer_passphrase }}
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3307
      DB_DATABASE: db
      DB_USERNAME: user
      DB_PASSWORD: password
      REDIS_HOST: localhost
      REDIS_PASSWORD: password
      REDIS_PORT: 6379

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      with:
       path: ~/.npm
       key: npm-${{ hashFiles('**/package-lock.json') }}

    - name: Cache PHP dependencies
      uses: actions/cache@v1
      with:
       path: ~/.npm
       key: composer-${{ hashFiles('**/composer.lock') }}

    - name: Decrypt auth.json
      run: gpg --quiet --batch --yes --decrypt --passphrase=$COMPOSER_PASSPHRASE --output auth.json .github/secrets/composer.json.gpg

    - name: Install curl zip npm
      run: sudo apt-get update && sudo apt-get install -y curl npm zip

    - name: Install composer
      run: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

    - name: Validate composer and install dependecies
      run: composer validate && composer install -q --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

    - name: Install node dependencies
      run:  curl https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | sudo tar xzvf - --exclude CHANGELOG.md --exclude LICENSE --exclude README.md --strip-components 1 -C /usr/local/

    - name: Install node and generate assets
      run: npm install && npm run production

    - name: PHPUnit
      run: vendor/bin/phpunit

    - name: Migrations
      run: php artisan migrate --force
