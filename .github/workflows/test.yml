name: Test

on: [push]

jobs:

  test:
    runs-on: ubuntu-18.04
    if: github.ref != 'refs/heads/master'

    services:

     mysql:
      image: mysql:5.7
      ports:
        - 3307:3306
      env:
        MYSQL_DATABASE: db
        MYSQL_USER: user
        MYSQL_PASSWORD: password
        MYSQL_ROOT_PASSWORD: password

     redis:
      image: bitnami/redis:latest
      ports:
        - 6379:6379
      env:
        REDIS_PASSWORD: na8!^&*JbXEz

    env:
      VARIABLES_PASSPHRASE: ${{ secrets.variables_testing_passphrase }}
      COMPOSER_PASSPHRASE: ${{ secrets.composer_passphrase }}

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      with:
       path: ~/.npm
       key: npm-${{ hashFiles('**/package-lock.json') }}

    - name: Cache PHP dependencies
      uses: actions/cache@v1
      with:
       path: ~/.composer
       key: composer-${{ hashFiles('**/composer.lock') }}

    - name: Decrypt composer auth.json .env.testing
      run: |
          gpg --quiet --batch --yes --decrypt --passphrase=$COMPOSER_PASSPHRASE --output auth.json .github/secrets/composer.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase=$VARIABLES_PASSPHRASE --output .env.testing .github/secrets/variables.testing.gpg

    - name: Set host names
      run: |
          sudo sh -c "echo 127.0.0.1 redis.internal.mos-sigma.com >> /etc/hosts"
          sudo sh -c "echo 127.0.0.1 db.internal.mos-sigma.com >> /etc/hosts"

    - name: Install curl zip
      run: sudo apt-get update && sudo apt-get install -y curl zip

    - name: Install composer
      run: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

    - name: Instruct composer to use https protocol over ssh
      run: composer config github-protocols https

    - name: Validate composer and install dependecies
      run: composer validate && composer install -q --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

    - uses: borales/actions-yarn@v2.0.0
      with:
       cmd: install
    - uses: borales/actions-yarn@v2.0.0
      with:
       cmd: prod

    - name: Migrations
      run: php artisan --env=testing migrate --force

    - name: PHPUnit
      run: vendor/bin/phpunit
