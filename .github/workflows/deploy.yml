name: Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-18.04
    if: github.event.pull_request.merged

    env:
      GOOGLE_PASSPHRASE: ${{ secrets.google_passphrase }}
 s     COMPOSER_PASSPHRASE: ${{ secrets.composer_passphrase }}
      VARIABLES_PASSPHRASE: ${{ secrets.variables_passphrase }}

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      with:
       path: ~/.npm
       key: npm-${{ hashFiles('**/package-lock.json') }}

    - name: Cache PHP dependencies
      uses: actions/cache@v1
      with:
       path: ~/.composer
       key: composer-${{ hashFiles('**/composer.lock') }}

    - name: Composer cache permissions
      run: |
           sudo mkdir -p ~/.npm && sudo chown -R $USER ~/.npm
           sudo mkdir -p ~/.composer && sudo chown -R $USER ~/.composer

    - name: Decrypt secrets
      run: |
          gpg --quiet --batch --yes --decrypt --passphrase=$GOOGLE_PASSPHRASE --output google.json .github/secrets/google.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase=$COMPOSER_PASSPHRASE --output auth.json .github/secrets/composer.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase=$VARIABLES_PASSPHRASE --output .env .github/secrets/variables.gpg

    - name: Install curl curl nodejs-dev node-gyp libssl1.0-dev zip npm
      run: sudo apt-get update && sudo apt-get install -y curl nodejs-dev node-gyp libssl1.0-dev zip npm

    - name: Install composer
      run: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

    - name: Validate composer and install prod dependecies
      run: |
          composer validate
          composer install -q --no-dev --optimize-autoloader --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

    - name: Install node
      run:  curl https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | sudo tar xzvf - --exclude CHANGELOG.md --exclude LICENSE --exclude README.md --strip-components 1 -C /usr/local/

    - name: Set ASSETS_URL
      run: |
           echo ::set-env name=ASSETS_HASH::$(find public -type f -name "*.json" -exec md5sum {} + | awk '{print $1}' | sort | md5sum | awk '{print $1}')
           echo "ASSET_URL=https://assets.sigmie.com/${ASSETS_HASH}" >> .env
           echo "MIX_ASSET_URL=https://assets.sigmie.com/${ASSETS_HASH}" >> .env

    - name: Install node dependencies and generate production assets
      run: npm install && npm run production

    - name: Install GCloud SDK
      run: if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi

    - name: Authenticate GCloud and configure default project
      run: |
          gcloud auth activate-service-account --key-file=google.json
          gcloud config set project mossigma-app-production

    - name: Deploy to app-engine
      run: gcloud app deploy --stop-previous-version
