{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "psalm:test",
            "type": "shell",
            "command": "packages/psalm/psalm-refactor --rename \"Tests\\Unit\\Controllers\\ClusterControllerTest\" --to \"Tests\\Unit\\Controllers\\Cluster\\ClusterControllerTest\" --root=$PWD"
        },
        {
            "label": "start",
            "type": "shell",
            "command": "sudo apt-get install curl software-properties-common && curl -sL https://deb.nodesource.com/setup_15.x | sudo bash - && sudo apt-get install nodejs && node -v && npm -v && npm install && npm run watch"
        },
        {
            "label": "php artisan",
            "type": "shell",
            "command": "php artisan ${input:params}"
        },
        {
            "label": "artisan:test",
            "type": "shell",
            "command": "php artisan test"
        },
        {
            "label": "decrypt:env:prod",
            "type": "shell",
            "command": "gpg --quiet --batch --yes --decrypt --passphrase='${input:params}' --output .env.prod .github/secrets/.env.gpg",
        },
        {
            "label": "decrypt:env:testing",
            "type": "shell",
            "command": "gpg --quiet --batch --yes --decrypt --passphrase='${input:params}' --output .env.testing .github/secrets/.env.testing.gpg",
        },
        {
            "label": "horizon:clear:long-running-queue",
            "type": "shell",
            "command": "php artisan horizon:clear --queue=long-running-queue",
        },
        {
            "label": "horizon:clear:default",
            "type": "shell",
            "command": "php artisan horizon:clear",
        },
        {
            "label": "encrypt:env:prod",
            "type": "shell",
            "command": "echo '${input:params}' | gpg --batch --yes --passphrase-fd 0 --symmetric --cipher-algo AES256 .env.prod && mv .env.prod.gpg .github/secrets/.env.gpg"
        },
        {
            "label": "encrypt:env:testing",
            "type": "shell",
            "command": "echo '${input:params}' | gpg --batch --yes --passphrase-fd 0 --symmetric --cipher-algo AES256 .env.testing && mv .env.testing.gpg .github/secrets/.env.testing.gpg"
        },
        {
            "label": "fresh:seed",
            "type": "shell",
            "command": "php artisan migrate:fresh --seed"
        },
        {
            "label": "make:test:unit",
            "type": "shell",
            "command": "php artisan make:test --unit ${input:params}"
        },
        {
            "label": "seed:only-user",
            "type": "shell",
            "command": "php artisan db:seed --class='UserSeeder'"
        },
        {
            "label": "seed:without-cluster",
            "type": "shell",
            "command": "php artisan db:seed --class='WithoutCluster'"
        },
        {
            "label": "seed:deleted-cluster",
            "type": "shell",
            "command": "php artisan db:seed --class='WithDeletedCluster'"
        },
        {
            "label": "db:seed",
            "type": "shell",
            "command": "php artisan db:seed"
        },
        {
            "label": "phpcs:tests",
            "type": "shell",
            "command": "vendor/bin/phpcbf --standard=psr12 tests && vendor/bin/phpcs --standard=psr12 tests"
        },
        {
            "label": "phpcs:app",
            "type": "shell",
            "command": "vendor/bin/phpcbf --standard=psr12 app && vendor/bin/phpcs --standard=psr12 app"
        },
        {
            "label": "make:test:feature",
            "type": "shell",
            "command": "php artisan make:test ${input:params}"
        },
        {
            "label": "event:clear",
            "type": "shell",
            "command": "php artisan event:clear"
        },
        {
            "label": "phpunit:coverage",
            "type": "shell",
            "command": "./vendor/bin/phpunit --coverage-html cov-html"
        },
        {
            "label": "horizon:terminate",
            "type": "shell",
            "command": "sudo php artisan horizon:terminate"
        },
        {
            "label": "dump:autoload",
            "type": "shell",
            "command": "composer dump-autoload"
        },
        {
            "label": "laravel:upgrade",
            "type": "shell",
            "command": "composer require laravel/framework --update-with-dependencies"
        },
        {
            "label": "migrate",
            "type": "shell",
            "command": "php artisan migrate"
        },
        {
            "label": "migrate:rollback",
            "type": "shell",
            "command": "php artisan migrate:rollback --step=1"
        },
        {
            "label": "migrate:fresh",
            "type": "shell",
            "command": "php artisan migrate:fresh"
        },
        {
            "label": "watch",
            "type": "shell",
            "command": "yarn run watch",
            "runOptions": {
                "runOn": "folderOpen"
            }
        },
        {
            "label": "phpunit",
            "type": "shell",
            "command": "vendor/bin/phpunit"
        },
        {
            "label": "phpunit:integration",
            "type": "shell",
            "command": "vendor/bin/phpunit --configuration=${cwd}/phpunit.xml --testsuite Integration"
        },
        {
            "label": "phpunit:unit",
            "type": "shell",
            "command": "vendor/bin/phpunit --configuration=${cwd}/phpunit.xml --testsuite Unit"
        },
        {
            "label": "phpunit:feature",
            "type": "shell",
            "command": "vendor/bin/phpunit --configuration=${cwd}/phpunit.xml --testsuite Feature"
        },
        {
            "label": "tinker",
            "type": "shell",
            "command": "php artisan tinker"
        },
        {
            "label": "queue:work",
            "type": "shell",
            "command": "php artisan queue:work"
        },
        {
            "label": "queue:once",
            "type": "shell",
            "command": "php artisan queue:work --once --timeout=1200"
        },
        {
            "label": "horizon",
            "type": "shell",
            "command": "php artisan horizon"
        },
        {
            "label": "phpunit",
            "type": "shell",
            "command": "vendor/bin/phpunit"
        },
        {
            "label": "route:list",
            "type": "shell",
            "command": "php artisan route:list"
        },
        {
            "label": "route:clear",
            "type": "shell",
            "command": "php artisan route:clear"
        },
        {
            "label": "config:cache",
            "type": "shell",
            "command": "php artisan config:cache"
        },
        {
            "label": "config:clear",
            "type": "shell",
            "command": "php artisan config:clear"
        },
        {
            "label": "cache:clear",
            "type": "shell",
            "command": "php artisan cache:clear"
        },
        {
            "label": "config:all",
            "type": "shell",
            "command": "php artisan config:cache && php artisan config:clear"
        },
        {
            "label": "code:check",
            "type": "shell",
            "command": "vendor/bin/phpstan analyse && vendor/bin/phpcs -s --standard=standard.xml app && node_modules/standard/bin/cmd.js | node_modules/snazzy/bin/cmd.js"
        },
        {
            "label": "php:check",
            "type": "shell",
            "command": "vendor/bin/phpstan analyse && vendor/bin/phpcs -s --standard=standard.xml app"
        },
        {
            "label": "js:fix",
            "type": "shell",
            "command": "node_modules/standard/bin/cmd.js --fix | node_modules/snazzy/bin/cmd.js"
        },
        {
            "label": "yarn:dev",
            "type": "shell",
            "command": "yarn run dev"
        },
        {
            "label": "yarn:prod",
            "type": "shell",
            "command": "yarn run prod"
        },
        {
            "label": "php:fix",
            "type": "shell",
            "command": "vendor/bin/phpcbf --standard=standard.xml app"
        },
        {
            "label": "js:check",
            "type": "shell",
            "command": "node_modules/standard/bin/cmd.js | node_modules/snazzy/bin/cmd.js"
        },
        {
            "label": "test:file",
            "type": "shell",
            "command": "vendor/bin/phpunit --configuration=${cwd}/phpunit.xml ${file}",
            "problemMatcher": []
        },
        {
            "label": "make:factory",
            "type": "shell",
            "command": "php artisan make:factory ${input:params}",
            "problemMatcher": []
        },
        {
            "label": "test:method",
            "type": "shell",
            "command": "vendor/bin/phpunit --configuration=${cwd}/phpunit.xml --no-coverage --filter ${selectedText} ${file}",
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "params",
            "description": "Parameters",
            "default": "",
            "type": "promptString"
        },
        {
            "id": "passphrase",
            "description": "Passphrase",
            "default": "",
            "type": "promptString"
        },
    ]
}
